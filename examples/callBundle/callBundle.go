package main

import (
	"bundles"
	"fmt"

	"github.com/ethereum/go-ethereum/crypto"
)

func main() {
	// PRIVATEKEY, ok := os.LookupEnv("PRIVATEKEY")
	// if !ok {
	// 	fmt.Printf("No environment variable PRIVATERKEY.")
	// 	return
	// }

	// var privateKey, _ = crypto.HexToECDSA(PRIVATEKEY)
	var privateKey, _ = crypto.GenerateKey()

	rpc := bundles.NewRPC("https://api.blocknative.com/v1/auction")
	opts := bundles.CallBundleParam{
		Txs:              []string{"0x02f90373010184773594008506a6c2390883050d0f94881d40237659c251811cec9c364ef91dc08d300c80b903055f5755290000000000000000000000000000000000000000000000000000000000000080000000000000000000000000557b933a7c2c45672b610f8954a3deb39a51a8ca000000000000000000000000000000000000000000000b36f3839fbc24df3c0000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000136f6e65496e6368563546656544796e616d6963000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220000000000000000000000000557b933a7c2c45672b610f8954a3deb39a51a8ca000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000b36f3839fbc24df3c0000000000000000000000000000000000000000000000000000000000257f26a4000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000005676980000000000000000000000002acf35c9a3f4c5c3f4c78ef5fb64c3ee82f07c45000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e80502b1c5000000000000000000000000557b933a7c2c45672b610f8954a3deb39a51a8ca000000000000000000000000000000000000000000000b36f3839fbc24df3c000000000000000000000000000000000000000000000000000000000025d3e28b0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000200000000000000003b6d0340724d5c9c618a2152e99a45649a3b8cf198321f4680000000000000003b6d0340397ff1542f962076d0bfe58ea045ffa2d347aca0ab4991fe000000000000000000000000000000000000000000000000fcc001a0c6c2391b495493e5526a5c522a986d420069bb6604781976b1249891c59bb98ba064a6f468f26cdfb897caba9f253b00e60024ff55efcabb820660501c0b9b2fe2", "0xf8df11850ba43b74008303d090946d3797426b1ccf0cf5028cd7a27d6b100e5d378b80b879000300000000000002ab6ac57e2f9792724d5c9c618a2152e99a45649a3b8cf198321f46ca1a05c4cc957a1f7f2e1ea6da2dab1c271c93e400000000052e0c0a13e3fdb6cc7000031c3ada568bacc1c4831813489dff949862511a000000000009a96961d0520358900100000000000002b5c5951389cba20125a03bdf50fd081a500620d275092a86401b0dc2a58eae6cf7c1389cd439d24a52d9a064b866609ff6b6f69d71ddd718a46a1081edcf42e950d1627922a0b184f02ad6"},
		BlockNumber:      "0xfaf049",
		StateBlockNumber: "0xfaf049",
	}

	result, err := rpc.CallBundle(privateKey, opts)
	if err != nil {
		fmt.Println(err)
		return
	}

	// Print result
	fmt.Printf("%+v\n", result)
}
